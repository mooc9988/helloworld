# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java-SDK CI with Gradle

on:
  workflow_call:

permissions:
  contents: read

jobs:
  build:
    name: "${{ matrix.os }}, jdk-${{ matrix.jdk }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04]
        jdk: [ 17 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: cache flatc
        id: cache-flatc
        uses: actions/cache@v3
        with:
          path: |
            /usr/bin/flatc
          key: ${{ runner.os }}-flatc
      - name: Set up flatc
        if: steps.cache-flatc.outputs.cache-hit != 'true'
        run: sudo apt update && sudo apt install -y flatbuffers-compiler
      - name: Generate flatbuffers java classes
        run: mkdir -p src/generated/java; flatc --java -o 'src/generated/java' --gen-object-api components/protocol/fbs/model.fbs
      - name: test files
        run: ls -la src/generated/java
      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'zulu'
          cache: 'gradle'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          gradle-version: wrapper
